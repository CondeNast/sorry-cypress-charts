{{- if and (.Values.mongo.enabled) (.Values.mongo.persistence.enabled) -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "sorry-cypress-helm.fullname" . }}-mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "sorry-cypress-helm.fullname" . }}-mongo
  template:
    metadata:
      name: {{ include "sorry-cypress-helm.fullname" . }}-mongo
      labels:
        app: {{ include "sorry-cypress-helm.fullname" . }}-mongo
        {{- with .Values.mongo.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end}}
      {{- with .Values.mongo.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      containers:
      - image: "{{ .Values.mongo.image.repository }}:{{ .Values.mongo.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.mongo.image.pullPolicy }}
        name: {{ include "sorry-cypress-helm.fullname" . }}-mongo
        ports:
        - containerPort: 27017
        readinessProbe:
          exec:
            command:
            - mongo
            - --eval
            - db.adminCommand('ping')
          failureThreshold: 6
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          {{- toYaml .Values.mongo.resources | nindent 10 }}
        volumeMounts:
          - name: mongo-storage
            mountPath: /data/db
      restartPolicy: Always
      serviceAccountName: ""
  serviceName: {{ include "sorry-cypress-helm.fullname" . }}-mongo
  volumeClaimTemplates:
  - metadata:
      name: mongo-storage
    spec:
      accessModes:
        - {{ .Values.mongo.persistence.accessMode }}
      resources:
        requests:
          storage: {{ .Values.mongo.persistence.size }}      
{{- end }}